(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{174:function(t,i,s){"use strict";s.r(i);var a=s(0),e=Object(a.a)({},function(){var t=this,i=t.$createElement,s=t._self._c||i;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("基本步骤")]),t._v(" "),s("ol",[s("li",[t._v("安装git")]),t._v(" "),s("li",[t._v("文件夹里右键git base here")]),t._v(" "),s("li",[t._v("初始化本地仓库  git init")]),t._v(" "),s("li",[t._v("远程仓库GitHub："),s("br"),t._v("\n①注册账号"),s("br"),t._v("\n②新建项目"),s("br"),t._v(" "),s("img",{staticStyle:{margin:"10px auto"},attrs:{src:t.$withBase("/git/git1.png"),alt:"git1"}}),s("br"),t._v(" "),s("img",{staticStyle:{margin:"10px auto"},attrs:{src:t.$withBase("/git/git2.png"),alt:"git2"}}),s("br"),t._v("\n③本地仓库与远端仓库建立连接："),s("br"),t._v("\n在git里输入ssh-Keygen后，设置ssh存放等配置信息，找c盘里（默认在C盘）。ssh文件夹里id_rsa.pub，复制文件里的ssh密钥"),s("br"),t._v("\n粘贴到"),s("br"),t._v(" "),s("img",{staticStyle:{margin:"10px auto"},attrs:{src:t.$withBase("/git/git3.png"),alt:"git4"}}),s("br"),t._v(" "),s("img",{staticStyle:{margin:"10px auto"},attrs:{src:t.$withBase("/git/git4.png"),alt:"git4"}}),s("br"),t._v(" "),s("img",{staticStyle:{margin:"10px auto"},attrs:{src:t.$withBase("/git/git5.png"),alt:"git5"}}),s("br"),t._v("\n④配置本地环境"),s("br"),t._v("\ngit config --global user。name   全局设置用户名"),s("br"),t._v("\ngit config --global user。email   全局设置用户邮箱"),s("br"),t._v("\ngit config --list 查看谁操作过"),s("br"),t._v("\n⑤本地添加远端仓库："),s("br"),t._v(" "),s("img",{staticStyle:{margin:"10px auto"},attrs:{src:t.$withBase("/git/git6.png"),alt:"git6"}}),s("br"),t._v(" "),s("img",{staticStyle:{margin:"10px auto"},attrs:{src:t.$withBase("/git/git7.png"),alt:"git7"}}),s("br"),t._v(" "),s("img",{staticStyle:{margin:"10px auto"},attrs:{src:t.$withBase("/git/git8.png"),alt:"git8"}}),s("br"),t._v("\n要添加一个新的远程仓库,可以指定一个简单的名字,以便将来引用,运行 git remote add [shortname]  [url]:"),s("br"),t._v("\n例如：$ git remote add origin https://github.com/rogurlearner/test-again.git   GIT里添加远端仓库地址"),s("br")])])]),t._v(" "),t._m(1),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("基础工作流")]),t._v(" "),s("ol",[t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),s("li",[s("p",[t._v("工作目录就是正在操作的项目，暂存区时代码暂时存放的地方（代码没写完），完整的代码才能提交到本地仓库图片"),s("br"),t._v(" "),s("img",{staticStyle:{margin:"10px auto"},attrs:{src:t.$withBase("/git/git9.png"),alt:"git9"}}),s("br")])])])]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("分支操作之基础工作流")]),t._v(" "),s("ol",[s("li",[t._v("什么是分支：同一个项目，可以写不同的方案")]),t._v(" "),s("li",[t._v("查看分支：git  branch")]),t._v(" "),s("li",[t._v("创建新分支：git branch <name>")]),t._v(" "),s("li",[t._v("切换分支：git  checkout  <name>")]),t._v(" "),s("li",[t._v("创建并切换分支：git checkout –b <name>")]),t._v(" "),s("li",[t._v("删除本地分支：git branche –d <name>")]),t._v(" "),s("li",[t._v("删除远程分支：git push -d  <origin> <branch>")]),t._v(" "),s("li",[t._v("分支合并&处理冲突\n无冲突时：git merge <branch>       <branch>是分支名\n有冲突时：git merge <branch>后 上面是当前更改   下面是传入时的更改\n"),s("img",{staticStyle:{margin:"10px auto"},attrs:{src:t.$withBase("/git/git10.png"),alt:"git10"}}),s("br"),t._v("\n解决冲突后"),s("br"),t._v("\ngit  add <pathspec>"),s("br"),t._v('\ngit commit -m "...”'),s("br")])])]),t._v(" "),t._m(10),t._v(" "),t._m(11)])},[function(){var t=this.$createElement,i=this._self._c||t;return i("h1",{attrs:{id:"git学习笔记"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git学习笔记","aria-hidden":"true"}},[this._v("#")]),this._v(" git学习笔记 📑")])},function(){var t=this.$createElement,i=this._self._c||t;return i("div",{staticClass:"warning custom-block"},[i("p",{staticClass:"custom-block-title"},[this._v("本地仓库与远程仓库的关联")]),this._v(" "),i("ol",[i("li",[this._v("查看远程仓库：git remote –v")]),this._v(" "),i("li",[this._v("添加源仓库地址为远程仓库：git remote add  <name>  <remote>")]),this._v(" "),i("li",[this._v("远程仓库重命名：git remote rename  old  new")])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("li",[i("p",[this._v("克隆仓库：git  clone repository       repository是要下载的远程地址")])])},function(){var t=this.$createElement,i=this._self._c||t;return i("li",[i("p",[this._v("查看当前文件的状态：git status")])])},function(){var t=this.$createElement,i=this._self._c||t;return i("li",[i("p",[this._v("提交到暂存区：git  add <pathspe>   git  add 。表示所有更改都提交到暂存区")])])},function(){var t=this.$createElement,i=this._self._c||t;return i("li",[i("p",[this._v('提交到本地仓库：git commit -m "...”-m是表示后面可以写信息，提示这次提交的是什么')])])},function(){var t=this.$createElement,i=this._self._c||t;return i("li",[i("p",[this._v("提交内容到远程仓库：git  push <remote> <branch>   例：git push origin master:master本地master提交到远程master 。git push origin master:dev本地master提交到远程dev 如果远程没有dev分支自动创建一个dev分支 。")])])},function(){var t=this.$createElement,i=this._self._c||t;return i("div",{staticClass:"warning custom-block"},[i("p",{staticClass:"custom-block-title"},[this._v("花式撤销 – 本地版本库回退")]),this._v(" "),i("ol",[i("li",[this._v("撤销工作区修改：git checkout -- <file>  回退到上一次全部修改")]),this._v(" "),i("li",[this._v("暂存区文件撤销(不覆盖工作区)：git reset HEAD<file>   git reset HEAD^回退一个版本    git reset HEAD~1也是回退一个版本")]),this._v(" "),i("li",[this._v("版本回退：git reset --(soft | mixed | hard)  <HEAD~（num )>  | <commit ID>    hard：工作区、暂存区、本地仓库回退到某一个版本   mixed：工作区是最新的没有回退，暂存区、本地仓库回退到某一个版本  soft：工作区和暂存区是最新的没有回退、本地仓库回退到某一个版本")])])])},function(){var t=this,i=t.$createElement,s=t._self._c||i;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("差异比较--能看出哪里改了")]),t._v(" "),s("ol",[s("li",[t._v("比较工作区与暂存区：git diff")]),t._v(" "),s("li",[t._v("比较工作区与本地版本库中最近一次commit的内容：git  diff  HEAD")]),t._v(" "),s("li",[t._v("比较暂存区与本地版本库中最近一次commit的内容：git diff --cached")]),t._v(" "),s("li",[t._v("比较两个commit之间的差异：git diff <commit-id> <commit-id>")])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("div",{staticClass:"warning custom-block"},[i("p",{staticClass:"custom-block-title"},[this._v("状态查询")]),this._v(" "),i("ol",[i("li",[this._v("查看状态：git status")]),this._v(" "),i("li",[this._v("查看日志：git log  <fileName>")]),this._v(" "),i("li",[this._v("查看历史操作记录：git reflog")])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("div",{staticClass:"warning custom-block"},[i("p",{staticClass:"custom-block-title"},[this._v("文档查询")]),this._v(" "),i("ol",[i("li",[this._v("展示Git命令大纲及常用命令：git  help（--help）")]),this._v(" "),i("li",[this._v("展示Git命令大纲及全部命令列表：git  help  –a")]),this._v(" "),i("li",[this._v("展示具体命令说明手册：git  help <command>")])])])},function(){var t=this,i=t.$createElement,s=t._self._c||i;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("文件暂存")]),t._v(" "),s("ol",[s("li",[t._v('添加改动到stash：git stash save -a "messeag”')]),t._v(" "),s("li",[t._v("查看stash列表：git stash list")]),t._v(" "),s("li",[t._v("恢复改动：git stash pop <stash@{id}>")]),t._v(" "),s("li",[t._v("删除暂存：git stash drop <stash@{id}>")]),t._v(" "),s("li",[t._v("删除全部暂存：git  stash clear")])])])}],!1,null,null,null);i.default=e.exports}}]);